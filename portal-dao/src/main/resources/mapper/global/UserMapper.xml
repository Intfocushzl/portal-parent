<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonghui.portal.mapper.global.UserMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="com.yonghui.portal.model.global.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="roleId" property="roleId" jdbcType="VARCHAR"/>
        <result column="pass" property="pass" jdbcType="VARCHAR"/>
        <result column="groupId" property="groupId" jdbcType="INTEGER"/>
        <result column="jobNumber" property="jobNumber" jdbcType="VARCHAR"/>
        <result column="storeNumber" property="storeNumber" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="firm" property="firm" jdbcType="VARCHAR"/>
        <result column="largeArea" property="largeArea" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
        <result column="roleType" property="roleType" jdbcType="INTEGER"/>
        <result column="changeMobile" property="changeMobile" jdbcType="INTEGER"/>
        <result column="changeRoleId" property="changeRoleId" jdbcType="VARCHAR"/>
        <result column="changeType" property="changeType" jdbcType="INTEGER"/>
        <result column="changeLargeArea" property="changeLargeArea" jdbcType="VARCHAR"/>
        <result column="changeProvince" property="changeProvince" jdbcType="VARCHAR"/>
        <result column="changeCity" property="changeCity" jdbcType="VARCHAR"/>
        <result column="changeFirm" property="changeFirm" jdbcType="VARCHAR"/>
        <result column="changeStatus" property="changeStatus" jdbcType="INTEGER"/>
        <result column="changeRoleName" property="changeRoleName" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="changeTime" property="changeTime" jdbcType="TIMESTAMP"/>
        <result column="rold" property="rold" jdbcType="VARCHAR"/>
        <result column="areaMans" property="areaMans" jdbcType="TIMESTAMP"/>
        <result column="changeAreaMans" property="changeAreaMans" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, account, `name`,email, roleId,jobNumber, storeNumber,
		createTime,status,type,firm,largeArea,province,city,changeRoleId, changeType, changeLargeArea,
    changeProvince, changeCity, changeFirm, changeStatus,changeStoreNumber,remark,changeTime,rold,areaMans,changeAreaMans
	</sql>

    <insert id="insert" parameterType="com.yonghui.portal.model.global.User">
        insert into platform.user_forfront (id, account, `name`,
        roleId, pass, jobNumber,
        storeNumber, createTime)
        values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{roleId,jdbcType=INTEGER}, #{pass,jdbcType=VARCHAR}, #{jobNumber,jdbcType=VARCHAR},
        #{storeNumber,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.yonghui.portal.model.global.User">
        insert into platform.user_forfront
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="roleId != null">
                roleId,
            </if>
            <if test="pass != null">
                pass,
            </if>
            <if test="jobNumber != null">
                jobNumber,
            </if>
            <if test="storeNumber != null">
                storeNumber,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="firm != null">
                firm,
            </if>
            <if test="largeArea != null">
                largeArea,
            </if>
            <if test="areaMans != null">
                areaMans,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="remark != null">
                remark,
            </if>
            createTime
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="pass != null">
                #{pass,jdbcType=VARCHAR},
            </if>
            <if test="jobNumber != null">
                #{jobNumber,jdbcType=VARCHAR},
            </if>
            <if test="storeNumber != null">
                #{storeNumber,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="firm != null">
                #{firm},
            </if>
            <if test="largeArea != null">
                #{largeArea},
            </if>
            <if test="areaMans != null">
                #{areaMans},
            </if>
            <if test="province != null">
                #{province},
            </if>
            <if test="city != null">
                #{city},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            now()
        </trim>
    </insert>

    <select id="getUserByJobNumber" resultMap="BaseResultMap">
        select
        u.id, u.account,u.mobile, u.`name`,u.email, u.roleId,u.jobNumber, u.storeNumber,
		u.createTime,u.status,u.`type`,u.firm,u.largeArea,
		u.province,u.city,u.changeMobile,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId
        where jobNumber = #{jobNumber}
    </select>


    <select id="Login" resultMap="BaseResultMap">
        select
        u.id, u.account, u.`name`,u.mobile,u.email, u.roleId,u.jobNumber, u.storeNumber,
		u.createTime,u.status,u.`type`,u.firm,u.largeArea,
		u.province,u.city,u.changeMobile,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId
        and u.jobNumber=#{jobNumber} and u.pass=#{pass}
    </select>

    <select id="getPersonnelMattersStatus" resultType="Map">
		select employeeNo as employee_no,employeeName as employee_name from hr.d_hana_hr_employee where employeeNo=#{jobNumber}  ORDER BY lkpDate DESC LIMIT 1
	</select>

    <select id="getBrowesReportByList">
		select count(1) ,menuName from platform.report_browse_log
		where browseUserId=#{userId}
		and browseDate=date_format(now(), '%Y-%m-%d')
		group by menuId
	</select>


    <select id="queryObject" resultMap="BaseResultMap">
        select
        u.id, u.account, u.`name`,u.email, u.roleId,u.jobNumber, u.storeNumber,
		u.createTime,u.status,u.`type`,u.firm,u.largeArea,
		u.province,u.city,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId where u.id = #{value}
	</select>

    <select id="queryList" resultMap="BaseResultMap">
        select
        u.id, u.account, u.`name`,u.email, u.roleId,u.jobNumber, u.storeNumber,
        u.createTime,u.status,u.`type`,u.firm,u.largeArea,
        u.province,u.city,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId
        <where>
            (u.`status`=-1 or u.`status`=1 or u.`status`=-5)
            <if test="account != null and account !=''">
                and  u.account like concat('%',#{account},'%')
            </if>
            <if test="jobNumber != null and jobNumber !=''">
                and  u.jobNumber like concat('%',#{jobNumber},'%')
            </if>
            <if test="name != null and name !=''">
                and  u.`name` like concat('%',#{name},'%')
            </if>
            <if test="remark != null and remark !=''">
                and  u.`remark` like concat('%',#{remark},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by  u.created_at asc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from platform.user_forfront as u
        <where>
            (u.`status`=-1 or u.`status`=1 or u.`status`=-5)
            <if test="account != null and account !=''">
                and  u.account like concat('%',#{account},'%')
            </if>
            <if test="jobNumber != null and jobNumber !=''">
                and  u.jobNumber like concat('%',#{jobNumber},'%')
            </if>
            <if test="name != null and name !=''">
                and  u.`name` like concat('%',#{name},'%')
            </if>
            <if test="remark != null and remark !=''">
                and  u.`remark` like concat('%',#{remark},'%')
            </if>
        </where>
    </select>

    <insert id="save" parameterType="com.yonghui.portal.model.global.User" useGeneratedKeys="true" keyProperty="id">
		insert into  platform.user_forfront
		(
		`account`,
		`name`,
		`email`,
		`roleId`,
		`pass`,
		`jobNumber`,
		`createTime`,
		`status`,
		`created_at`,
		`updated_at`,
		`type`,
		`largeArea`,
		`province`,
		`city`,
		`firm`,
		`storeNumber`,
		`changeRoleId`,
		`changeType`,
		`changeLargeArea`,
		`changeProvince`,
		`changeCity`,
		`changeFirm`,
		`changeStatus`,
		`changeStoreNumber`,
		`changeTime`,
		`remark`,
		`areaMans`,
		`changeAreaMans`,
		`rold`
		)
		values
		(
		#{account},
		#{name},
		#{email},
		#{roleId},
		#{pass},
		#{jobNumber},
		NOW(),
		#{status},
		NOW(),
		NOW(),
		#{type},
		#{largeArea},
		#{province},
		#{city},
		#{firm},
		#{storeNumber},
		#{changeRoleId},
		#{changeType},
		#{changeLargeArea},
		#{changeProvince},
		#{changeCity},
		#{changeFirm},
		#{changeStatus},
		#{changeStoreNumber},
		#{changeTime},
		#{remark},
		#{areaMans},
		#{changeAreaMans},
		#{rold}
		)
	</insert>

    <update id="update" parameterType="com.yonghui.portal.model.global.User">
        update platform.user_forfront
        <set>
            <if test="name != null">`name` = #{name},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="roleId != null">`roleId` = #{roleId},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="largeArea != null">`largeArea` = #{largeArea},</if>
            <if test="province != null">`province` = #{province},</if>
            <if test="city != null">`city` = #{city},</if>
            <if test="firm != null">`firm` = #{firm},</if>
            <if test="storeNumber != null">`storeNumber` = #{storeNumber},</if>
            <if test="changeRoleId != null">`changeRoleId` = #{changeRoleId},</if>
            <if test="changeType != null">`changeType` = #{changeType},</if>
            <if test="changeLargeArea != null">`changeLargeArea` = #{changeLargeArea},</if>
            <if test="changeProvince != null">`changeProvince` = #{changeProvince},</if>
            <if test="changeCity != null">`changeCity` = #{changeCity},</if>
            <if test="changeFirm != null">`changeFirm` = #{changeFirm},</if>
            <if test="changeStatus != null">`changeStatus` = #{changeStatus},</if>
            <if test="changeStoreNumber != null">`changeStoreNumber` = #{changeStoreNumber},</if>
            <if test="changeTime != null">`changeTime` = #{changeTime},</if>
            <if test="remark!= null">`remark` = #{remark},</if>
            <if test="areaMans != null">`areaMans` = #{areaMans},</if>
            <if test="changeAreaMans != null">`changeAreaMans` = #{changeAreaMans},</if>
            <if test="rold != null">`rold` = #{rold},</if>
            `updated_at` = NOW()
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from  platform.user_forfront where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from platform.user_forfront where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <update id="updatePasswordByJobNumber" parameterType="Map">
        update platform.user_forfront
        <set>
            <if test="pass != null and pass !='' ">`pass` = #{pass},</if>
            `updated_at` = NOW(),
        </set>
        where jobNumber = #{jobNumber}
    </update>
    <update id="updateInfoByJobNumber" parameterType="Map">
        update platform.user_forfront
        <set>
            <if test="userName != null">`name` = #{userName},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            `updated_at` = NOW()
        </set>
        where jobNumber = #{jobNumber}
    </update>

    <update id="changeGrant" parameterType="com.yonghui.portal.model.global.User">
        update platform.user_forfront
        <set>
            <if test="changeRoleId != null and changeRoleId != ''">`changeRoleId` = #{changeRoleId},</if>
            <if test="changeType != null and changeType != ''">`changeType` = #{changeType},</if>
            <if test="changeLargeArea != null and changeLargeArea != ''">`changeLargeArea` = #{changeLargeArea},</if>
            <if test="changeProvince != null and changeProvince != ''">`changeProvince` = #{changeProvince},</if>
            <if test="changeCity != null and changeCity != ''">`changeCity` = #{changeCity},</if>
            <if test="changeFirm != null and changeFirm != ''">`changeFirm` = #{changeFirm},</if>
            <if test="changeStoreNumber != null and changeStoreNumber != ''">`changeStoreNumber` = #{changeStoreNumber},</if>
            <if test="remark!= null">`remark` = #{remark},</if>
            <if test="changeAreaMans != null and changeAreaMans != ''">`changeAreaMans` = #{changeAreaMans},</if>
            `changeStatus` = 1,
            `changeTime` = NOW()
        </set>
        where jobNumber = #{jobNumber}
    </update>



    <select id="queryChangeGrantList" resultMap="BaseResultMap">
        select
        u.id, u.account, u.`name`,u.email, u.roleId,u.jobNumber, u.storeNumber,
        u.createTime,u.status,u.`type`,u.firm,u.largeArea,
        u.province,u.city,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId
        <where>
            (u.`status`=-1 or u.`status`=1 or u.`status`=-5)
            <choose>
                <when test="changeStatus != null and changeStatus!= ''">
                    and  u.changeStatus= #{changeStatus}
                </when>
                <otherwise>
                    and  u.changeStatus= 1
                </otherwise>
            </choose>
            <if test="account != null and account !=''">
                and  u.account like concat('%',#{account},'%')
            </if>
            <if test="jobNumber != null and jobNumber !=''">
                and  u.jobNumber like concat('%',#{jobNumber},'%')
            </if>
            <if test="name != null and name !=''">
                and  u.`name` like concat('%',#{name},'%')
            </if>
            <if test="remark != null and remark !=''">
                and  u.`remark` like concat('%',#{remark},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by u.created_at asc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryChangeGrantTotal" resultType="int">
        select count(*) from platform.user_forfront as u
        <where>
            (u.`status`=-1 or u.`status`=1 or u.`status`=-5)
            <choose>
                <when test="changeStatus != null and changeStatus!= ''">
                    and  u.changeStatus= #{changeStatus}
                </when>
                <otherwise>
                    and  u.changeStatus= 1
                </otherwise>
            </choose>
            <if test="account != null and account !=''">
                and  u.account like concat('%',#{account},'%')
            </if>
            <if test="jobNumber != null and jobNumber !=''">
                and  u.jobNumber like concat('%',#{jobNumber},'%')
            </if>
            <if test="name != null and name !=''">
                and  u.`name` like concat('%',#{name},'%')
            </if>
            <if test="remark != null and remark !=''">
                and  u.`remark` like concat('%',#{remark},'%')
            </if>
        </where>
    </select>

    <update id="refuse">
        update platform.user_forfront
        SET  `changeStatus` = -1
        where id = #{id}
    </update>


    <select id="queryObjectAll" resultMap="BaseResultMap">
        select
        u.id, u.account, u.`name`,u.email, u.roleId,u.jobNumber, u.storeNumber,u.pass,
        u.createTime,u.status,u.`type`,u.firm,u.largeArea,
        u.province,u.city,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId where u.id = #{value}
    </select>



    <select id="queryNewUserList" resultMap="BaseResultMap">
        select
        u.id, u.account, u.`name`,u.email, u.roleId,u.jobNumber, u.storeNumber,
        u.createTime,u.status,u.`type`,u.firm,u.largeArea,
        u.province,u.city,u.changeRoleId,u. changeType, u.changeLargeArea,
        u.changeProvince, u.changeCity, u.changeFirm,u. changeStatus,u.changeStoreNumber,u.remark,
        u.changeTime,u.rold,u.areaMans,u.changeAreaMans
        ,r.name as roleName,r.type as roleType
        from platform.user_forfront as u join platform.role_forfront as r on r.roleId=u.roleId
        <where>
            u.`status`= 0
            <if test="account != null and account !=''">
                and  u.account like concat('%',#{account},'%')
            </if>
            <if test="jobNumber != null and jobNumber !=''">
                and  u.jobNumber like concat('%',#{jobNumber},'%')
            </if>
            <if test="name != null and name !=''">
                and  u.`name` like concat('%',#{name},'%')
            </if>
            <if test="remark != null and remark !=''">
                and  u.`remark` like concat('%',#{remark},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by u.created_at asc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryNewUserTotal" resultType="int">
        select count(*) from platform.user_forfront as u
        <where>
            u.`status`= 0
            <if test="account != null and account !=''">
                and  u.account like concat('%',#{account},'%')
            </if>
            <if test="jobNumber != null and jobNumber !=''">
                and  u.jobNumber like concat('%',#{jobNumber},'%')
            </if>
            <if test="name != null and name !=''">
                and  u.`name` like concat('%',#{name},'%')
            </if>
            <if test="remark != null and remark !=''">
                and  u.`remark` like concat('%',#{remark},'%')
            </if>
        </where>
    </select>

</mapper>